{"version":3,"sources":["components/Modal.js","redux/contactFormSlice.js","views/Contacts.js","App.js","reportWebVitals.js","redux/store.js","index.js"],"names":["Modal","handleClose","show","children","showHideClassName","className","onClick","contactFormSlice","createSlice","name","initialState","id","firstName","lastName","age","imageLink","modalForm","reducers","setForm","state","action","payload","field","text","resetForm","setModalForm","actions","Contacts","contactStore","useSelector","contact","dispatch","useDispatch","useState","errorMessage","setErrorMessage","contacts","setContacts","showmodal","setShowmodal","console","log","useEffect","axios","method","url","then","response","status","data","setTimeout","catch","e","style","backgroundColor","height","overflowY","padding","display","justifyContent","value","type","onChange","target","min","width","placeholder","textAlign","options","message","color","map","item","borderRadius","overflow","src","photo","selectContact","deleteContact","cursor","setContactForm","top","left","transform","position","zIndex","alignItems","alignSelf","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","configureStore","reducer","contactFormReducer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.6acab8ca.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Modal = ({ handleClose, show, children }) => {\r\n  const showHideClassName = show ? \"modal d-block\" : \"modal d-none\";\r\n\r\n  return (\r\n    <div className={showHideClassName}>\r\n      <div className=\"modal-container\">\r\n        {children}\r\n        <div onClick={handleClose}>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n// <span className=\"modal-close\" onClick={handleClose}>X</span>","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nexport const contactFormSlice = createSlice({\r\n  name: 'contact',\r\n  initialState: {\r\n    id: '',\r\n    firstName: '',\r\n    lastName: '',\r\n    age: '',\r\n    imageLink: '',\r\n\r\n    modalForm: {}\r\n  },\r\n  reducers: {\r\n    setForm: (state, action) => {\r\n      state[action.payload.field] = action.payload.text;\r\n    },\r\n    resetForm: (state, action) => {\r\n      state.firstName = '';\r\n      state.lastName = '';\r\n      state.age = '';\r\n      state.imageLink = '';\r\n      state.id = '';\r\n    },\r\n    setModalForm: (state, action) => {\r\n      state.modalForm = action.payload;\r\n    },\r\n  },\r\n})\r\n\r\nexport const { setForm, resetForm, setModalForm } = contactFormSlice.actions\r\n\r\nexport default contactFormSlice.reducer","import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport {\n  Link\n} from \"react-router-dom\";\nimport Modal from \"./../components/Modal\";\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setForm, resetForm, setModalForm } from './../redux/contactFormSlice';\n\nfunction Contacts() {\n  const contactStore = useSelector((state) => state.contact);\n  const dispatch = useDispatch();\n\n  const [errorMessage, setErrorMessage] = useState(null);\n  // const [successMessage, setSuccessMessage] = useState(null);\n  const [contacts, setContacts] = useState([]);\n  const [showmodal, setShowmodal] = useState(false);\n\n  console.log(contactStore);\n\n  const changeFirstname = (e)=> {\n    dispatch(setForm({text: e.target.value, field: 'firstName'}))\n  }\n\n  const changeLastname = (e)=> {\n    dispatch(setForm({text: e.target.value, field: 'lastName'}))\n  }\n\n  const changeAge = (e)=> {\n    dispatch(setForm({text: e.target.value, field: 'age'}))\n  }\n\n  const changeImagelink = (e)=> {\n    dispatch(setForm({text: e.target.value, field: 'imageLink'}))\n  }\n\n  const resetContactForm = ()=> {\n    dispatch(resetForm());\n  }\n\n  const submitNewContact = ()=> {\n    setErrorMessage(null);\n    if(contactStore.firstName !== '' && contactStore.lastName !== '' && contactStore.age !== '' && contactStore.imageLink !== ''){\n      var url = 'https://simple-contact-crud.herokuapp.com/contact';\n      if(contactStore.id){\n        url = 'https://simple-contact-crud.herokuapp.com/contact/'+contactStore.id;\n      }\n\n      let options = {\n        method: contactStore.id ? 'PUT':'POST',\n        url: url,\n        data: {\n          \"firstName\": contactStore.firstName,\n          \"lastName\": contactStore.lastName,\n          \"age\": contactStore.age,\n          \"photo\": contactStore.imageLink\n        }\n      }\n      axios(options)\n      .then(function(response) {\n        if(response.status >= 200){\n          // setSuccessMessage(response.data.message);\n        }\n        dispatch(resetForm());\n        // console.log(response.data.data)\n      })\n      .catch((e)=>{\n        if(e.response.status === 400){\n          setErrorMessage(e.response.data.message);\n        }\n        console.log(e.response, 'dsdsdsdsds')\n      })\n    }\n  }\n\n  const getContacts = ()=> {\n    setErrorMessage(null);\n    let options = {\n      method: 'GET',\n      url: 'https://simple-contact-crud.herokuapp.com/contact'\n    }\n    axios(options)\n    .then(function(response) {\n      if(response.status >= 200){\n        setContacts(response.data.data);\n\n        setTimeout(()=> {\n          console.log(contactStore.contacts,'sasasas')\n        },200)\n      }\n    })\n    .catch((e)=>{\n      \n    })\n  }\n\n  const deleteContact = (id)=> {\n    setErrorMessage(null);\n    let options = {\n      method: 'DELETE',\n      url: 'https://simple-contact-crud.herokuapp.com/contact/'+id\n    }\n    axios(options)\n    .then(function(response) {\n      if(response.status >= 200){\n        setContacts(response.data.data);\n\n        setTimeout(()=> {\n          console.log(contactStore.contacts,'sasasas')\n        },200)\n      }\n    })\n    .catch((e)=>{\n      \n    })\n  }\n\n  useEffect(() => {\n    getContacts();\n  }, []);\n\n  const setContactForm = (item)=> {\n    dispatch(setForm({text: item.firstName, field: 'firstName'}))\n    dispatch(setForm({text: item.lastName, field: 'lastName'}))\n    dispatch(setForm({text: item.age, field: 'age'}))\n    dispatch(setForm({text: item.photo, field: 'imageLink'}))\n    dispatch(setForm({text: item.id, field: 'id'}))\n  }\n\n  // Click on image \n  const selectContact = (item)=> {\n    setShowmodal(true);\n    dispatch(setModalForm(item));\n    // setSelectedImage(item);\n  }\n\n  return (\n    <div className=\"st-container\">\n      <div className=\"row\" style={{backgroundColor: 'white'}}>\n        <div className=\"col-md-7\" style={{height: '420px', overflowY: 'auto',/*width: '60vw', *//*backgroundColor: 'white',*/ padding: '24px'}}>\n          <div style={{display: 'flex', justifyContent: 'space-between'}}>\n            <p>Save New Contact</p>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-md-6\">\n              <div className=\"form-group\">\n                <label>First Name</label>\n                <input value={contactStore.firstName} type=\"text\" onChange={changeFirstname} className=\"form-control\"/>\n              </div>\n            </div>\n            <div className=\"col-md-6\">\n              <div className=\"form-group\">\n                <label>Last Name</label>\n                <input value={contactStore.lastName} type=\"text\" onChange={changeLastname} className=\"form-control\"/>\n              </div>\n            </div>\n          </div>\n          <div className=\"form-group\">\n            <label>Age</label>\n            <input value={contactStore.age} min=\"10\" onChange={changeAge} type=\"number\" className=\"form-control\" style={{width: '50%'}}/>\n          </div>\n          <div className=\"form-group\">\n            <label>Image Link</label>\n            <input value={contactStore.imageLink} type=\"text\" onChange={changeImagelink} placeholder=\"Input your image link\" className=\"form-control\"/>\n          </div>\n          <hr/>\n          <div style={{textAlign: 'right'}}>\n            <button className=\"btn btn-secondary\" onClick={resetContactForm}>Reset Form</button>&nbsp;\n            <button className=\"btn btn-primary\" onClick={submitNewContact}>Send</button><br/>\n            {\n              errorMessage ? <span style={{color: 'red'}}>{errorMessage}</span> : null\n            }\n          </div>\n        </div>\n        <div className=\"col-md-5\" style={{height: '420px', overflowY: 'auto',/*width: '40vw', */backgroundColor: '#133f6f3d', padding: '24px'}}>\n          {\n            contacts.map((item)=>\n              <div key={item.id} className=\"row\" style={{justifyContent: 'space-between', height: '120px'}}>\n                <div className=\"col-md-4\">\n                  <div style={{width: 60, height: 60, borderRadius: 60, backgroundColor: 'black', overflow: 'hidden'}}>\n                    <img src={item.photo} width=\"60\"/>\n                  </div>\n                </div>\n                <div className=\"col-md-8\">\n                  <div className=\"row\">\n                    <div className=\"col-md-9\">\n                      <span onClick={()=> selectContact(item)} className=\"contact-name\">{item.firstName} {item.lastName}</span><br/>\n                      <span>{item.age} years old</span>\n                    </div>\n                    <div className=\"col-md-3\" style={{textAlign: 'right', justifyContent: 'center'}}>\n                      <i onClick={()=> deleteContact(item.id)} className=\"fa fa-close\" style={{color: 'red', cursor: 'pointer'}}></i><br/>\n                      <i onClick={()=> setContactForm(item)} className=\"fa fa-pencil\" style={{color: '#257af8', cursor: 'pointer'}}></i>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            )\n          }\n        </div>\n      </div>\n      <Modal show={showmodal}>\n        <div onClick={()=> setShowmodal(false)} className=\"st-modal-1\"></div>\n        <div style={{top: '50%', left: '50%', transform: 'translate(-50%,-50%)', backgroundColor: 'white', position: 'absolute', zIndex: 10, width: '300px', height: '450px', textAlign: 'center', padding: '12px', justifyContent: 'center', alignItems: 'center'}}>\n          <div style={{alignSelf: 'center', width: 150, height: 150, borderRadius: 150, backgroundColor: 'black', overflow: 'hidden'}}>\n            <img src={contactStore.modalForm.photo} width=\"150\"/>\n          </div>\n          <p>{contactStore.modalForm.firstName} {contactStore.modalForm.lastName}</p>\n          <p>{contactStore.modalForm.age} years old</p>\n        </div>\n      </Modal>\n    </div>\n  );\n}\n\nexport default Contacts;","import {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport Contacts from './views/Contacts';\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\"> <Contacts /> </Route>\n      </Switch>\n    </Router>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from '@reduxjs/toolkit'\r\nimport contactFormReducer from './contactFormSlice'\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    contact: contactFormReducer,\r\n  },\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './styles.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}